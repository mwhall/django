# Generated by Django 5.1 on 2024-08-17 00:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Component',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('data_sheet', models.URLField(blank=True, null=True)),
                ('type', models.CharField(choices=[('BA', 'Battery'), ('MU', 'Microcontroller'), ('PT', 'Charging Port'), ('LE', 'LED'), ('SC', 'Screen'), ('VB', 'Vibrator'), ('PB', 'PCB'), ('MP', 'Microphone'), ('SW', 'Switch'), ('BN', 'Button')], default='BA', max_length=2)),
                ('capacity', models.IntegerField()),
                ('dimensions', models.CharField(max_length=255)),
                ('voltage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('model', models.CharField(max_length=255)),
                ('core', models.CharField(max_length=255)),
                ('clock_speed', models.CharField(max_length=255)),
                ('memory_flash', models.IntegerField()),
                ('memory_sram', models.IntegerField()),
                ('subtype', models.CharField(max_length=255)),
                ('pins', models.IntegerField()),
                ('size', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('model', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField()),
                ('sales_links', models.URLField(blank=True, null=True)),
                ('retailer', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(choices=[('VP', 'Vaporizer')], default='VP', max_length=2)),
                ('refillable', models.BooleanField(default=False)),
                ('rechargeable', models.BooleanField(default=True)),
                ('components', models.ManyToManyField(related_name='devices', to='scavenger.component')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True, null=True)),
                ('photos', models.ImageField(blank=True, null=True, upload_to='static/note_photos/')),
                ('posted_date', models.DateTimeField(auto_now_add=True)),
                ('last_updated_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='component',
            name='notes',
            field=models.ManyToManyField(blank=True, related_name='component_notes', to='scavenger.note'),
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtype', models.CharField(max_length=255)),
                ('size', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.ManyToManyField(blank=True, related_name='tool_notes', to='scavenger.note')),
            ],
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_location', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('purchase_link', models.URLField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scavenger.device')),
                ('notes', models.ManyToManyField(blank=True, related_name='device_notes', to='scavenger.note')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('HA', 'Hack'), ('TD', 'Teardown')], default='TD', max_length=2)),
                ('destructive', models.BooleanField(default=False)),
                ('goal', models.CharField(max_length=1024)),
                ('approach', models.TextField()),
                ('hackable', models.BooleanField(default=False)),
                ('components', models.ManyToManyField(blank=True, related_name='components', to='scavenger.component')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scavenger.device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('entries', models.ManyToManyField(blank=True, related_name='entries', to='scavenger.note')),
                ('tools_used', models.ManyToManyField(related_name='tools', to='scavenger.tool')),
                ('user_device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='scavenger.userdevice')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='static/profile_pics/')),
                ('saved_logs', models.ManyToManyField(blank=True, related_name='saved_by_users', to='scavenger.log')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
